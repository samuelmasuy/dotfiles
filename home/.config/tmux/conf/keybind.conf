# vi: ft=tmux

################################################################ KEY BINDINGS__
# Note: that the -n means we can ignore the ctrl-a prefix

# Set Ctrl-a as the default prefix
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Reload the tmux file
unbind r
bind r source-file "$tmux_dir/tmux.conf"

# Windows
bind w kill-window

# Horizontal and vertical splits
unbind |
bind | run-shell ' \
    target_path=$(cd "#{pane_current_path}" && \
        if git rev-parse --is-inside-work-tree >/dev/null 2>&1; then \
            git rev-parse --show-toplevel; \
        else \
            echo "#{pane_current_path}"; \
        fi); \
    tmux split-window -h -c "$target_path"'
unbind _
bind _ run-shell ' \
    target_path=$(cd "#{pane_current_path}" && \
        if git rev-parse --is-inside-work-tree >/dev/null 2>&1; then \
            git rev-parse --show-toplevel; \
        else \
            echo "#{pane_current_path}"; \
        fi); \
    tmux split-window -v -c "$target_path"'

# Move windows
unbind h
bind h swap-window -t -1\; select-window -t -1
unbind l
bind l swap-window -t +1\; select-window -t +1

bind C-f display-popup -E "\
  tmux list-windows -F '#{window_index} #{window_name}' |\
  gsed '/^$/d' |\
  fzf --reverse --header jump-to-window |\
  cut -d ' ' -f 1 |\
  xargs tmux select-window -t"

# Rebind go to previous window
unbind .
bind . last-window

# Kill all windows except for the current one
bind K kill-window -a

# Panes
# Sync panes
bind m setw synchronize-panes

# Kill all panes except for the current one
bind k kill-pane -a

# Show only one pane
unbind +
bind + resize-pane -Z

######################################################################### VIM__

# set-window-option -g mode-keys vi
setw -g mode-keys vi
unbind [
bind Escape copy-mode

bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe "reattach-to-user-namespace pbcopy"

# Send command to all panes in current session
bind C-e command-prompt -p "Command:" \
         "run \"tmux list-panes -s -F '##{session_name}:##{window_index}.##{pane_index}' \
                | xargs -I PANE tmux send-keys -t PANE '%1' Enter\""

# Opencode on a split at the root of git repo or current dir
unbind o
bind o run-shell ' \
    target_path=$(cd "#{pane_current_path}" && \
        if git rev-parse --is-inside-work-tree >/dev/null 2>&1; then \
            git rev-parse --show-toplevel; \
        else \
            echo "#{pane_current_path}"; \
        fi); \
    tmux split-window -h -c "$target_path" "fish -ic \"opencode\""\'
