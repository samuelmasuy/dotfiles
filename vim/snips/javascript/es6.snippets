snippet const "const"
const ${1:name} = ${2:value}
$0
endsnippet

snippet let "let"
let ${1:name} = ${2:value}$0
endsnippet

snippet af "arrow function (js)"
(${1:parameters}) => {
	${2:// body...}
}
endsnippet

# Generator function
snippet gfn
function* ${1:name}(${2}) {
	yield ${3};
}
endsnippet

# Arrow function
snippet => "Arrow function" i
(${1:parameters}) => {
	${2:// body...}
}
endsnippet

# Class
snippet class
class ${1:name} {
	constructor(${2:arg}) {
		${3:// init}
	}
	${4}
}
$0
endsnippet

snippet "class extends"
class ${1:name} extends ${2:extension} {
	${VISUAL}$0
}
endsnippet

snippet forof "for of loop"
for (let ${1:s} of ${2:sequence}) {
	${3}
}
endsnippet

snippet im "import"
import ${1:foo} from '${2:bar}'
endsnippet

snippet ex "export"
export ${1:default} ${2:bar}
endsnippet

snippet ex
export ${1:default} ${2:bar}
endsnippet

snippet setter "setter method"
set ${1:name} ($1) {
	this._$1 = $1
}
$0
endsnippet

snippet getter "getter method"
get ${1:name} () {
	return this._$1
}
$0
endsnippet

snippet method "class method"
${1:methodName} (${2:parameters}) {
	${0:// body...}
}
endsnippet
